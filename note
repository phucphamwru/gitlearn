phuc@phuc-VirtualBox:~/Dev/1-commit$ git init


phuc@phuc-VirtualBox:~/Dev/1-commit$ ls -al
total 12
drwxrwxr-x 3 phuc phuc 4096 Thg 2  26 09:25 .
drwxrwxr-x 3 phuc phuc 4096 Thg 2  26 09:24 ..
drwxrwxr-x 7 phuc phuc 4096 Thg 2  26 09:29 .git


phuc@phuc-VirtualBox:~/Dev/1-commit$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	README.md

nothing added to commit but untracked files present (use "git add" to track)


phuc@phuc-VirtualBox:~/Dev/1-commit$ git add README.md


phuc@phuc-VirtualBox:~/Dev/1-commit$ git status
On branch master

No commits yet


Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   README.md


phuc@phuc-VirtualBox:~/Dev/1-commit$ git commit -m 'Add README file'

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'phuc@phuc-VirtualBox.(none)')


phuc@phuc-VirtualBox:~/Dev/1-commit$ git config --global user.email "phucpv62@wru.vn"

phuc@phuc-VirtualBox:~/Dev/1-commit$ git config --global user.name "CodersTokyo"

phuc@phuc-VirtualBox:~/Dev/1-commit$ git commit -m 'Add README file'
[master (root-commit) 637f141] Add README file
 1 file changed, 1 insertion(+)
 create mode 100644 README.md
 
phuc@phuc-VirtualBox:~/Dev/1-commit$ ^C
phuc@phuc-VirtualBox:~/Dev/1-commit$ git status
On branch master
nothing to commit, working tree clean




====
git init : tao GIT - Repository
git status: xem trang thai
git add : them file vao Repo
git comit : dong goi nhung thang thay doi - roi dan no 1 cai tem (ghi noi dung thay doi)

file README de cho moi nguoi biet trong cai project do - project co tac dung gi.



637f141:  la tem (ten commit)
1 insertion(+) : 1 dong moi duoc them vao.
mode 100644: Permision cua file.

git log: la xem lich su Commit.
git show: hien thi noi dung file va cac thay doi trong file.
git diff: xem noi dung thay doi cua cac modified.	








working directory : phia local - moi truong ma ta truc tiep lam viec voi 				code.
staging area	: khi "git add" thi file thay doi tu moi truong working 			directory sang moi truong staging.
	+) Chi co nhung file nam trong staging erea moi duoc comit. -> 		nhay len moi truong git Repository.
git repository	:




git checkout: xoa bo nhung vung thay doi trong file, khi ma file do chua 			len staging - nghia la chua git.add^^

git reset: back tro lai moi truong truoc do - tu moi truong Staging ve Working directory.



git branching: tach nhanh.
+) git branch: hien thi cac nhanh dang ton tai
+) git checkout -b ,,,: vua checkout va tao ra nha'nh moi - va chuyen sang nha'nh do lam viec.
+) git checkout <branch>: de di chuyen sang nhanh khac lam viec
	vd: git checkout master: tro sang nhanh Master lam viec.
+) git branch -D <ten branch> : de xoa branch do di.

git merging: ghep nhanh.
+) git merge ...
	vd: A <-- B (ghep nhanh B vao A)
		B1. git checkout A :nhay sang nhanh A lam viec.
		B2. git merge B :ghep nhanh B vao nhanh A.
		

git reset --soft <Id_commit> : file tro ve trang thai truoc khi duoc commit. (staged)
git reset --mixed <ID_commit>: file tro ve trang thai working directory.
git reset --hard <to_commit> : xoa han file do di.

git revert Id_commit> : xoa bo nhung thay doi trong file day (nhung dau '+' duoc thay vao la dau '-')
		
		
.gitignore: noi chua file hoac thu muc - khong duoc cho vao commit.

